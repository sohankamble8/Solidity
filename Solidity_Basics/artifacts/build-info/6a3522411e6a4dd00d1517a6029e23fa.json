{
	"id": "6a3522411e6a4dd00d1517a6029e23fa",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"Solidity_Basics/Inheritance.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n\r\npragma solidity ^0.4.0;\r\n\r\ncontract Inheritance{\r\n    address[] private wallets;\r\n    mapping(address => uint) inheritance;\r\n    address private owner;\r\n    uint256 private amount;\r\n    bool private isDeseased;\r\n    constructor() payable{\r\n        owner = msg.sender;\r\n        amount = msg.value;\r\n        isDeseased = false;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if(owner == msg.sender){}\r\n        _;\r\n    }\r\n    function setup(address _wallet, uint256 _amount) public onlyOwner{\r\n        wallets.push(_wallet);\r\n        inheritance[_wallet] = _amount;\r\n    }\r\n\r\n    function sendMoney() private {\r\n        for(uint i=0;i<wallets.length;i++){\r\n            wallets[i].transfer(inheritance[wallets[i]]);\r\n        }\r\n    }\r\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"Solidity_Basics/Inheritance.sol": {
				"Inheritance": {
					"abi": [
						{
							"constant": false,
							"inputs": [
								{
									"name": "_wallet",
									"type": "address"
								},
								{
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "setup",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"Solidity_Basics/Inheritance.sol\":62:764  contract Inheritance{\r... */\n  mstore(0x40, 0x80)\n    /* \"Solidity_Basics/Inheritance.sol\":291:301  msg.sender */\n  caller\n    /* \"Solidity_Basics/Inheritance.sol\":283:288  owner */\n  0x2\n  0x0\n    /* \"Solidity_Basics/Inheritance.sol\":283:301  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity_Basics/Inheritance.sol\":321:330  msg.value */\n  callvalue\n    /* \"Solidity_Basics/Inheritance.sol\":312:318  amount */\n  0x3\n    /* \"Solidity_Basics/Inheritance.sol\":312:330  amount = msg.value */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"Solidity_Basics/Inheritance.sol\":354:359  false */\n  0x0\n    /* \"Solidity_Basics/Inheritance.sol\":341:351  isDeseased */\n  0x4\n  0x0\n    /* \"Solidity_Basics/Inheritance.sol\":341:359  isDeseased = false */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"Solidity_Basics/Inheritance.sol\":62:764  contract Inheritance{\r... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"Solidity_Basics/Inheritance.sol\":62:764  contract Inheritance{\r... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0xf46d1982\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"Solidity_Basics/Inheritance.sol\":455:601  function setup(address _wallet, uint256 _amount) public onlyOwner{\r... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_3\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_3:\n        /* \"Solidity_Basics/Inheritance.sol\":455:601  function setup(address _wallet, uint256 _amount) public onlyOwner{\r... */\n      pop\n      tag_4\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_5)\n    tag_4:\n      stop\n    tag_5:\n        /* \"Solidity_Basics/Inheritance.sol\":417:427  msg.sender */\n      caller\n        /* \"Solidity_Basics/Inheritance.sol\":408:427  owner == msg.sender */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"Solidity_Basics/Inheritance.sol\":408:413  owner */\n      0x2\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      pop\n      pop\n        /* \"Solidity_Basics/Inheritance.sol\":408:427  owner == msg.sender */\n      pop\n        /* \"Solidity_Basics/Inheritance.sol\":531:538  wallets */\n      0x0\n        /* \"Solidity_Basics/Inheritance.sol\":544:551  _wallet */\n      dup3\n        /* \"Solidity_Basics/Inheritance.sol\":531:552  wallets.push(_wallet) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"Solidity_Basics/Inheritance.sol\":531:552  wallets.push(_wallet) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      0x100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"Solidity_Basics/Inheritance.sol\":586:593  _amount */\n      dup1\n        /* \"Solidity_Basics/Inheritance.sol\":563:574  inheritance */\n      0x1\n        /* \"Solidity_Basics/Inheritance.sol\":563:583  inheritance[_wallet] */\n      0x0\n        /* \"Solidity_Basics/Inheritance.sol\":575:582  _wallet */\n      dup5\n        /* \"Solidity_Basics/Inheritance.sol\":563:583  inheritance[_wallet] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x0\n      keccak256\n        /* \"Solidity_Basics/Inheritance.sol\":563:593  inheritance[_wallet] = _amount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"Solidity_Basics/Inheritance.sol\":455:601  function setup(address _wallet, uint256 _amount) public onlyOwner{\r... */\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820d1e38c14bf2bad0d7b92515962676ed62af396abb235b91d25164ffbd6ec5bec0029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405233600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550346003819055506000600460006101000a81548160ff021916908315150217905550610193806100766000396000f300608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f46d198214610046575b600080fd5b34801561005257600080fd5b50610091600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610093565b005b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a9050505060008290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505600a165627a7a72305820d1e38c14bf2bad0d7b92515962676ed62af396abb235b91d25164ffbd6ec5bec0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLER PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP CALLVALUE PUSH1 0x3 DUP2 SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH2 0x193 DUP1 PUSH2 0x76 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xF46D1982 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x0 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd1 0xe3 DUP13 EQ 0xbf 0x2b 0xad 0xd PUSH28 0x92515962676ED62AF396ABB235B91D25164FFBD6EC5BEC0029000000 ",
							"sourceMap": "62:702:0:-;;;291:10;283:5;;:18;;;;;;;;;;;;;;;;;;321:9;312:6;:18;;;;354:5;341:10;;:18;;;;;;;;;;;;;;;;;;62:702;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "608060405260043610610041576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063f46d198214610046575b600080fd5b34801561005257600080fd5b50610091600480360381019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050610093565b005b3373ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a9050505060008290806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505080600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505600a165627a7a72305820d1e38c14bf2bad0d7b92515962676ed62af396abb235b91d25164ffbd6ec5bec0029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x41 JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0xF46D1982 EQ PUSH2 0x46 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x52 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x91 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x93 JUMP JUMPDEST STOP JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 POP POP POP PUSH1 0x0 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP DUP1 PUSH1 0x1 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 SSTORE POP POP POP JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 0xd1 0xe3 DUP13 EQ 0xbf 0x2b 0xad 0xd PUSH28 0x92515962676ED62AF396ABB235B91D25164FFBD6EC5BEC0029000000 ",
							"sourceMap": "62:702:0:-;;;;;;;;;;;;;;;;;;;;;;;;455:146;;8:9:-1;5:2;;;30:1;27;20:12;5:2;455:146:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:10;408:19;;:5;;;;;;;;;;:19;531:7;544;531:21;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;531:21:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;586:7;563:11;:20;575:7;563:20;;;;;;;;;;;;;;;:30;;;;455:146;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "80600",
								"executionCost": "60651",
								"totalCost": "141251"
							},
							"external": {
								"setup(address,uint256)": "61159"
							},
							"internal": {
								"sendMoney()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 62,
									"end": 764,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "MSTORE"
								},
								{
									"begin": 291,
									"end": 301,
									"name": "CALLER"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH",
									"value": "2"
								},
								{
									"begin": 283,
									"end": 288,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "EXP"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "DUP2"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SLOAD"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "DUP2"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "MUL"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "NOT"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "AND"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SWAP1"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "DUP4"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "AND"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "MUL"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "OR"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SWAP1"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "SSTORE"
								},
								{
									"begin": 283,
									"end": 301,
									"name": "POP"
								},
								{
									"begin": 321,
									"end": 330,
									"name": "CALLVALUE"
								},
								{
									"begin": 312,
									"end": 318,
									"name": "PUSH",
									"value": "3"
								},
								{
									"begin": 312,
									"end": 330,
									"name": "DUP2"
								},
								{
									"begin": 312,
									"end": 330,
									"name": "SWAP1"
								},
								{
									"begin": 312,
									"end": 330,
									"name": "SSTORE"
								},
								{
									"begin": 312,
									"end": 330,
									"name": "POP"
								},
								{
									"begin": 354,
									"end": 359,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 341,
									"end": 351,
									"name": "PUSH",
									"value": "4"
								},
								{
									"begin": 341,
									"end": 351,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "EXP"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "DUP2"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "SLOAD"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "DUP2"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "PUSH",
									"value": "FF"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "MUL"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "NOT"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "AND"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "SWAP1"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "DUP4"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "ISZERO"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "ISZERO"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "MUL"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "OR"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "SWAP1"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "SSTORE"
								},
								{
									"begin": 341,
									"end": 359,
									"name": "POP"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "DUP1"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "CODECOPY"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 62,
									"end": 764,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820d1e38c14bf2bad0d7b92515962676ed62af396abb235b91d25164ffbd6ec5bec0029",
									".code": [
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "MSTORE"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "LT"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "SWAP1"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "DIV"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "AND"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "F46D1982"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "EQ"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "JUMPI"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "JUMPDEST"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "DUP1"
										},
										{
											"begin": 62,
											"end": 764,
											"name": "REVERT"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "JUMPDEST"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SUB"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "DUP2"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "ADD"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "AND"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "ADD"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP3"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP2"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "DUP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "ADD"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP3"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP2"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "SWAP1"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "JUMP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "JUMPDEST"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "STOP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "JUMPDEST"
										},
										{
											"begin": 417,
											"end": 427,
											"name": "CALLER"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "AND"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "SLOAD"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "EXP"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "SWAP1"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 413,
											"name": "POP"
										},
										{
											"begin": 408,
											"end": 427,
											"name": "POP"
										},
										{
											"begin": 531,
											"end": 538,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 544,
											"end": 551,
											"name": "DUP3"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "DUP3"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SUB"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "MSTORE"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "KECCAK256"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "ADD"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP2"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP3"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP2"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP2"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "EXP"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "DUP2"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SLOAD"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "DUP2"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "MUL"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "NOT"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "AND"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "DUP4"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "AND"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "MUL"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "OR"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SWAP1"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "SSTORE"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "POP"
										},
										{
											"begin": 531,
											"end": 552,
											"name": "POP"
										},
										{
											"begin": 586,
											"end": 593,
											"name": "DUP1"
										},
										{
											"begin": 563,
											"end": 574,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 575,
											"end": 582,
											"name": "DUP5"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "AND"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "DUP2"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "MSTORE"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "ADD"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "SWAP1"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "DUP2"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "MSTORE"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "ADD"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 563,
											"end": 583,
											"name": "KECCAK256"
										},
										{
											"begin": 563,
											"end": 593,
											"name": "DUP2"
										},
										{
											"begin": 563,
											"end": 593,
											"name": "SWAP1"
										},
										{
											"begin": 563,
											"end": 593,
											"name": "SSTORE"
										},
										{
											"begin": 563,
											"end": 593,
											"name": "POP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "POP"
										},
										{
											"begin": 455,
											"end": 601,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"setup(address,uint256)": "f46d1982"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[{\"name\":\"_wallet\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"setup\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"Solidity_Basics/Inheritance.sol\":\"Inheritance\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"Solidity_Basics/Inheritance.sol\":{\"keccak256\":\"0xa83ad94e204c8c88e33e892ea23aa66414abc9038c35d4ac25b14f7dbeca7e6b\",\"urls\":[\"bzzr://f3bf51d58195af4e465e3bd75bbe17cb0fb579d2b5b469ab2b43693fba5ed819\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "Solidity_Basics/Inheritance.sol:11:5: Warning: No visibility specified. Defaulting to \"public\". \n    constructor() payable{\r\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "No visibility specified. Defaulting to \"public\". ",
				"severity": "warning",
				"sourceLocation": {
					"end": 367,
					"file": "Solidity_Basics/Inheritance.sol",
					"start": 251
				},
				"type": "Warning"
			}
		],
		"sources": {
			"Solidity_Basics/Inheritance.sol": {
				"ast": {
					"absolutePath": "Solidity_Basics/Inheritance.sol",
					"exportedSymbols": {
						"Inheritance": [
							93
						]
					},
					"id": 94,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "35:23:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 93,
							"linearizedBaseContracts": [
								93
							],
							"name": "Inheritance",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 4,
									"name": "wallets",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "89:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_address_$dyn_storage",
										"typeString": "address[]"
									},
									"typeName": {
										"baseType": {
											"id": 2,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "89:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"id": 3,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "89:9:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
											"typeString": "address[]"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 8,
									"name": "inheritance",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "121:36:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
										"typeString": "mapping(address => uint256)"
									},
									"typeName": {
										"id": 7,
										"keyType": {
											"id": 5,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "129:7:0",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "121:24:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
											"typeString": "mapping(address => uint256)"
										},
										"valueType": {
											"id": 6,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "140:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"id": 10,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "164:21:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 9,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "164:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 12,
									"name": "amount",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "192:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "192:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 14,
									"name": "isDeseased",
									"nodeType": "VariableDeclaration",
									"scope": 93,
									"src": "221:23:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 13,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "221:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "private"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "272:95:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 17,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "283:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 18,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "291:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 19,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "291:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "283:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "283:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 22,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "312:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 23,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "321:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 24,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "321:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "312:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "312:18:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 29,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 27,
														"name": "isDeseased",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "341:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"hexValue": "66616c7365",
														"id": 28,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "354:5:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "341:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 30,
												"nodeType": "ExpressionStatement",
												"src": "341:18:0"
											}
										]
									},
									"documentation": null,
									"id": 32,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "262:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "272:0:0"
									},
									"scope": 93,
									"src": "251:116:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 41,
										"nodeType": "Block",
										"src": "394:55:0",
										"statements": [
											{
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 34,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 10,
														"src": "408:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 35,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "417:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "417:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "408:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": null,
												"id": 39,
												"nodeType": "IfStatement",
												"src": "405:25:0",
												"trueBody": {
													"id": 38,
													"nodeType": "Block",
													"src": "428:2:0",
													"statements": []
												}
											},
											{
												"id": 40,
												"nodeType": "PlaceholderStatement",
												"src": "440:1:0"
											}
										]
									},
									"documentation": null,
									"id": 42,
									"name": "onlyOwner",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "394:0:0"
									},
									"src": "375:74:0",
									"visibility": "internal"
								},
								{
									"body": {
										"id": 63,
										"nodeType": "Block",
										"src": "520:81:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 54,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "544:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 51,
															"name": "wallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "531:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 53,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "531:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address) returns (uint256)"
														}
													},
													"id": 55,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "531:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 56,
												"nodeType": "ExpressionStatement",
												"src": "531:21:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 61,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"baseExpression": {
															"argumentTypes": null,
															"id": 57,
															"name": "inheritance",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 8,
															"src": "563:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 59,
														"indexExpression": {
															"argumentTypes": null,
															"id": 58,
															"name": "_wallet",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 44,
															"src": "575:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "563:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 60,
														"name": "_amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "586:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "563:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 62,
												"nodeType": "ExpressionStatement",
												"src": "563:30:0"
											}
										]
									},
									"documentation": null,
									"id": 64,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [
										{
											"arguments": null,
											"id": 49,
											"modifierName": {
												"argumentTypes": null,
												"id": 48,
												"name": "onlyOwner",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 42,
												"src": "511:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "511:9:0"
										}
									],
									"name": "setup",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 44,
												"name": "_wallet",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "470:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 43,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "470:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 46,
												"name": "_amount",
												"nodeType": "VariableDeclaration",
												"scope": 64,
												"src": "487:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "487:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "469:34:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "520:0:0"
									},
									"scope": 93,
									"src": "455:146:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 91,
										"nodeType": "Block",
										"src": "638:123:0",
										"statements": [
											{
												"body": {
													"id": 89,
													"nodeType": "Block",
													"src": "683:71:0",
													"statements": [
														{
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 82,
																			"name": "inheritance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 8,
																			"src": "718:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																				"typeString": "mapping(address => uint256)"
																			}
																		},
																		"id": 86,
																		"indexExpression": {
																			"argumentTypes": null,
																			"baseExpression": {
																				"argumentTypes": null,
																				"id": 83,
																				"name": "wallets",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4,
																				"src": "730:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 85,
																			"indexExpression": {
																				"argumentTypes": null,
																				"id": 84,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 68,
																				"src": "738:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "730:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "718:23:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"argumentTypes": null,
																		"baseExpression": {
																			"argumentTypes": null,
																			"id": 78,
																			"name": "wallets",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4,
																			"src": "698:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_array$_t_address_$dyn_storage",
																				"typeString": "address[] storage ref"
																			}
																		},
																		"id": 80,
																		"indexExpression": {
																			"argumentTypes": null,
																			"id": 79,
																			"name": "i",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 68,
																			"src": "706:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "IndexAccess",
																		"src": "698:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"id": 81,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": null,
																	"src": "698:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
																		"typeString": "function (uint256)"
																	}
																},
																"id": 87,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "698:44:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 88,
															"nodeType": "ExpressionStatement",
															"src": "698:44:0"
														}
													]
												},
												"condition": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 74,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"id": 71,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 68,
														"src": "662:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 72,
															"name": "wallets",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4,
															"src": "664:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "length",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "664:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "662:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 90,
												"initializationExpression": {
													"assignments": [
														68
													],
													"declarations": [
														{
															"constant": false,
															"id": 68,
															"name": "i",
															"nodeType": "VariableDeclaration",
															"scope": 92,
															"src": "653:6:0",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 67,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "653:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"value": null,
															"visibility": "internal"
														}
													],
													"id": 70,
													"initialValue": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 69,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "660:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "653:8:0"
												},
												"loopExpression": {
													"expression": {
														"argumentTypes": null,
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "679:3:0",
														"subExpression": {
															"argumentTypes": null,
															"id": 75,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 68,
															"src": "679:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 77,
													"nodeType": "ExpressionStatement",
													"src": "679:3:0"
												},
												"nodeType": "ForStatement",
												"src": "649:105:0"
											}
										]
									},
									"documentation": null,
									"id": 92,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "sendMoney",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "627:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "638:0:0"
									},
									"scope": 93,
									"src": "609:152:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "private"
								}
							],
							"scope": 94,
							"src": "62:702:0"
						}
					],
					"src": "35:729:0"
				},
				"id": 0
			}
		}
	}
}